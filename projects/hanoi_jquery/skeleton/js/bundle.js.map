{"version":3,"sources":["webpack:///webpack/bootstrap d6c8b10cef2ab54fcd05","webpack:///./skeleton/js/main.js","webpack:///./skeleton/js/game.js","webpack:///./skeleton/js/hanoi-view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACPD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;;;;;;ACpEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,OAAO;AACxB;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d6c8b10cef2ab54fcd05\n **/","const HanoiGame = require('./game.js');\nconst HanoiView = require('./hanoi-view.js')\n\n$( () => {\n  const rootEl = $('.toh');\n  const game = new HanoiGame();\n  new HanoiView(game, rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./skeleton/js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","function Game () {\n  this.towers = [[3, 2, 1], [], []];\n};\n\nGame.prototype.isValidMove = function(startTowerIdx, endTowerIdx) {\n    const startTower = this.towers[startTowerIdx];\n    const endTower = this.towers[endTowerIdx];\n\n    if (startTower.length === 0) {\n      return false;\n    } else if (endTower.length == 0) {\n      return true;\n    } else {\n      const topStartDisc = startTower[startTower.length - 1];\n      const topEndDisc = endTower[endTower.length - 1];\n      return topStartDisc < topEndDisc;\n    }\n};\n\nGame.prototype.isWon = function(){\n    // move all the discs to the last or second tower\n    return (this.towers[2].length == 3) || (this.towers[1].length == 3);\n};\n\n\nGame.prototype.move = function(startTowerIdx, endTowerIdx) {\n    if (this.isValidMove(startTowerIdx, endTowerIdx)) {\n      this.towers[endTowerIdx].push(this.towers[startTowerIdx].pop());\n      return true;\n    } else {\n      return false;\n    }\n};\n\n\nGame.prototype.print = function(){\n    console.log(JSON.stringify(this.towers));\n};\n\n\nGame.prototype.promptMove = function(reader, callback) {\n    this.print();\n    reader.question(\"Enter a starting tower: \", start => {\n      const startTowerIdx = parseInt(start);\n      reader.question(\"Enter an ending tower: \", end => {\n        const endTowerIdx = parseInt(end);\n        callback(startTowerIdx, endTowerIdx)\n      });\n    });\n};\n\nGame.prototype.run = function(reader, gameCompletionCallback) {\n    this.promptMove(reader, (startTowerIdx, endTowerIdx) => {\n      if (!this.move(startTowerIdx, endTowerIdx)) {\n        console.log(\"Invalid move!\");\n      }\n\n      if (!this.isWon()) {\n        // Continue to play!\n        this.run(reader, gameCompletionCallback);\n      } else {\n        this.print();\n        console.log(\"You win!\");\n        gameCompletionCallback();\n      }\n    });\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./skeleton/js/game.js\n ** module id = 1\n ** module chunks = 0\n **/","function HanoiView(game, el) {\n  this.$el = el;\n  this.game = game;\n\n  this.clickTowerIndex = null;\n  this.$el.on(\"click\", \"ul\", this.clickTower.bind(this));\n\n  this.setupTowers();\n  this.render();\n}\n\nHanoiView.prototype.setupTowers = function(){\n  this.$el.empty();\n  this.$el.addClass(\"group\");\n\n  let $tower, $disk;\n  for (let i = 0; i < 3; i++){\n    $tower = $(\"<ul>\");\n    for (let j = 0; j < 3; j++){\n      $disk = $(\"<li>\");\n      $tower.append($disk);\n    }\n\n    this.$el.append($tower);\n  }\n};\n\nHanoiView.prototype.render = function() {\n  const $towers = this.$el.find(\"ul\");\n  $towers.removeClass();\n\n  if (this.clickTowerIndex !== null) {\n    $towers.eq(this.clickTowerIdx).addClass(\"selected\");\n  }\n\n  // disks [1, 2, 3]\n  // towerIdx = 0;\n  this.game.towers.forEach( (disks, towerIdx) => {\n    const $disks = $towers.eq(towerIdx).children();\n    $disks.removeClass();\n\n    disks.forEach( (diskWidth, diskIdx) => {\n    /*\n    Since our disks are stacked from bottom to top\n    as [3, 2, 1], we have to select from the back\n    of our jQuery object, using negative indices.\n    */\n    $disks.eq(-1 * (diskIdx + 1)).addClass(\"disk-\" + diskWidth);\n  });\n});\n\n\n  //click --> makes move\n    //disk moves, addClass to li, with disk index\n      //update the size of disk from css\n  // did they win?\n    // repeats @ click\n    //otherwise\n    //figcaption set up\n\n};\n\nHanoiView.prototype.clickTower = function (event) {\n  let index = $(event.currentTarget).index();\n\n  if (this.clickTowerIndex === null) {\n    this.clickTowerIndex = index;\n  } else if (!(this.game.move(this.clickTowerIndex, index))) {\n    alert(\"Invalid move!\");\n    this.clickTowerIndex = null;\n  } else {\n    this.game.move(this.clickTowerIndex, index);\n    this.clickTowerIndex = null;\n  }\n\n  this.render();\n\n  if (this.game.isWon()) {\n    this.$el.off(\"click\")\n    this.$el.addClass(\"game-over\");\n    alert(\"Good work!\");\n  }\n};\n\nmodule.exports = HanoiView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./skeleton/js/hanoi-view.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}